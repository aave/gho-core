diff -ruN ../../src/contracts/gho/GhoToken.sol contracts/gho/GhoToken.sol
--- ../../src/contracts/gho/GhoToken.sol	2024-05-21 10:57:52.000000000 +0300
+++ contracts/gho/GhoToken.sol	2024-05-27 12:55:24.588859419 +0300
@@ -66,11 +66,16 @@
     uint128 bucketCapacity
   ) external onlyRole(FACILITATOR_MANAGER_ROLE) {
     Facilitator storage facilitator = _facilitators[facilitatorAddress];
+    require(
+      !facilitator.isLabelNonempty, //TODO: remove workaroun when CERT-977 is resolved
+      'FACILITATOR_ALREADY_EXISTS'
+    );
     require(bytes(facilitator.label).length == 0, 'FACILITATOR_ALREADY_EXISTS');
     require(bytes(facilitatorLabel).length > 0, 'INVALID_LABEL');
 
     facilitator.label = facilitatorLabel;
     facilitator.bucketCapacity = bucketCapacity;
+    facilitator.isLabelNonempty = true;
 
     _facilitatorsList.add(facilitatorAddress);
 
@@ -86,6 +91,10 @@
     address facilitatorAddress
   ) external onlyRole(FACILITATOR_MANAGER_ROLE) {
     require(
+      _facilitators[facilitatorAddress].isLabelNonempty, //TODO: remove workaroun when CERT-977 is resolved
+      'FACILITATOR_DOES_NOT_EXIST'
+    );
+    require(
       bytes(_facilitators[facilitatorAddress].label).length > 0,
       'FACILITATOR_DOES_NOT_EXIST'
     );
@@ -105,6 +114,10 @@
     address facilitator,
     uint128 newCapacity
   ) external onlyRole(BUCKET_MANAGER_ROLE) {
+    require(
+      _facilitators[facilitator].isLabelNonempty, //TODO: remove workaroun when CERT-977 is resolved
+      'FACILITATOR_DOES_NOT_EXIST'
+    );
     require(bytes(_facilitators[facilitator].label).length > 0, 'FACILITATOR_DOES_NOT_EXIST');
 
     uint256 oldCapacity = _facilitators[facilitator].bucketCapacity;
@@ -119,12 +132,12 @@
   }
 
   /// @inheritdoc IGhoToken
-  function getFacilitatorBucket(address facilitator) external view returns (uint256, uint256) {
+  function getFacilitatorBucket(address facilitator) public view returns (uint256, uint256) {
     return (_facilitators[facilitator].bucketCapacity, _facilitators[facilitator].bucketLevel);
   }
 
   /// @inheritdoc IGhoToken
-  function getFacilitatorsList() external view returns (address[] memory) {
+  function getFacilitatorsList() public view returns (address[] memory) {
     return _facilitatorsList.values();
   }
 }
diff -ruN ../../src/contracts/gho/interfaces/IGhoToken.sol contracts/gho/interfaces/IGhoToken.sol
--- ../../src/contracts/gho/interfaces/IGhoToken.sol	2024-05-21 10:57:52.000000000 +0300
+++ contracts/gho/interfaces/IGhoToken.sol	2024-05-27 12:55:24.588859419 +0300
@@ -13,6 +13,7 @@
     uint128 bucketCapacity;
     uint128 bucketLevel;
     string label;
+    bool isLabelNonempty;   //TODO: remove workaroun when https://certora.atlassian.net/browse/CERT-977 is resolved
   }
 
   /**
diff -ruN ../../src/contracts/gho/UpgradeableGhoToken.sol contracts/gho/UpgradeableGhoToken.sol
--- ../../src/contracts/gho/UpgradeableGhoToken.sol	2024-05-21 11:57:23.000000000 +0300
+++ contracts/gho/UpgradeableGhoToken.sol	2024-05-27 15:04:16.458997293 +0300
@@ -76,11 +76,16 @@
     uint128 bucketCapacity
   ) external onlyRole(FACILITATOR_MANAGER_ROLE) {
     Facilitator storage facilitator = _facilitators[facilitatorAddress];
+    require(
+      !facilitator.isLabelNonempty, //TODO: remove workaroun when CERT-977 is resolved
+      'FACILITATOR_ALREADY_EXISTS'
+    );
     require(bytes(facilitator.label).length == 0, 'FACILITATOR_ALREADY_EXISTS');
     require(bytes(facilitatorLabel).length > 0, 'INVALID_LABEL');
 
     facilitator.label = facilitatorLabel;
     facilitator.bucketCapacity = bucketCapacity;
+    facilitator.isLabelNonempty = true;
 
     _facilitatorsList.add(facilitatorAddress);
 
@@ -96,6 +101,10 @@
     address facilitatorAddress
   ) external onlyRole(FACILITATOR_MANAGER_ROLE) {
     require(
+      _facilitators[facilitatorAddress].isLabelNonempty, //TODO: remove workaroun when CERT-977 is resolved
+      'FACILITATOR_DOES_NOT_EXIST'
+    );
+    require(
       bytes(_facilitators[facilitatorAddress].label).length > 0,
       'FACILITATOR_DOES_NOT_EXIST'
     );
@@ -115,6 +124,10 @@
     address facilitator,
     uint128 newCapacity
   ) external onlyRole(BUCKET_MANAGER_ROLE) {
+    require(
+      _facilitators[facilitator].isLabelNonempty, //TODO: remove workaroun when CERT-977 is resolved
+      'FACILITATOR_DOES_NOT_EXIST'
+    );
     require(bytes(_facilitators[facilitator].label).length > 0, 'FACILITATOR_DOES_NOT_EXIST');
 
     uint256 oldCapacity = _facilitators[facilitator].bucketCapacity;
@@ -129,12 +142,12 @@
   }
 
   /// @inheritdoc IGhoToken
-  function getFacilitatorBucket(address facilitator) external view returns (uint256, uint256) {
+  function getFacilitatorBucket(address facilitator) public view returns (uint256, uint256) {
     return (_facilitators[facilitator].bucketCapacity, _facilitators[facilitator].bucketLevel);
   }
 
   /// @inheritdoc IGhoToken
-  function getFacilitatorsList() external view returns (address[] memory) {
+  function getFacilitatorsList() public view returns (address[] memory) {
     return _facilitatorsList.values();
   }
 
diff -ruN ../../src/.gitignore .gitignore
--- ../../src/.gitignore	1970-01-01 02:00:00.000000000 +0200
+++ .gitignore	2024-05-27 12:55:24.588859419 +0300
@@ -0,0 +1,2 @@
+*
+!.gitignore
